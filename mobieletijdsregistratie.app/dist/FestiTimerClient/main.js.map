{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/enums/timeraction.enum.ts","webpack:///./src/app/models/enums/timerstate.enum.ts","webpack:///./src/app/models/person.model.ts","webpack:///./src/app/models/workshift.model.ts","webpack:///./src/app/notifications/notifications.component.css","webpack:///./src/app/notifications/notifications.component.html","webpack:///./src/app/notifications/notifications.component.ts","webpack:///./src/app/person-list/person-list.component.css","webpack:///./src/app/person-list/person-list.component.html","webpack:///./src/app/person-list/person-list.component.ts","webpack:///./src/app/pipes/feather.pipe.ts","webpack:///./src/app/pipes/filter.pipe.ts","webpack:///./src/app/registration-list-modal/registration-list-modal.component.css","webpack:///./src/app/registration-list-modal/registration-list-modal.component.html","webpack:///./src/app/registration-list-modal/registration-list-modal.component.ts","webpack:///./src/app/registration-list/registration-list.component.css","webpack:///./src/app/registration-list/registration-list.component.html","webpack:///./src/app/registration-list/registration-list.component.ts","webpack:///./src/app/resolution-error/resolution-error.component.css","webpack:///./src/app/resolution-error/resolution-error.component.html","webpack:///./src/app/resolution-error/resolution-error.component.ts","webpack:///./src/app/services/core/auth.interceptor.ts","webpack:///./src/app/services/core/auth.service.ts","webpack:///./src/app/services/http/employer.service.ts","webpack:///./src/app/services/http/notification.service.ts","webpack:///./src/app/services/http/person.service.ts","webpack:///./src/app/services/http/workshift.service.ts","webpack:///./src/app/services/others/error.service.ts","webpack:///./src/app/services/others/filter.service.ts","webpack:///./src/app/services/others/hub.service.ts","webpack:///./src/app/services/others/registration.service.ts","webpack:///./src/app/sidebar/sidebar.component.css","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PersonListComponent } from './person-list/person-list.component';\r\nimport { RegistrationListComponent } from './registration-list/registration-list.component';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PersonListComponent },\r\n  { path: 'registratie', component: RegistrationListComponent },\r\n  { path: 'notificaties', component: NotificationsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"innerWidth <= 1024\\\">\\r\\n    <app-sidebar *ngIf=\\\"isAuthenticated\\\"></app-sidebar>\\r\\n    <app-login *ngIf=\\\"!isAuthenticated\\\"></app-login>\\r\\n\\r\\n    <notifier-container [routerLink]=\\\"['notificaties']\\\"></notifier-container>\\r\\n\\r\\n    <ng-template #registrationModal let-modal>\\r\\n        <div class=\\\"modal-header bg-blue text-light\\\">\\r\\n            <span class=\\\"modal-title h5 \\\" id=\\\"modal-basic-title\\\">Registratie {{ registrationStatus }}.</span>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.dismiss()\\\">\\r\\n                <span class=\\\"text-light\\\" [innerHTML]=\\\"'x' | feather:24\\\"></span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button class=\\\"btn bg-lightgreen text-light\\\" [routerLink]=\\\"['registratie']\\\"\\r\\n                (click)=\\\"modal.dismiss(); registrationStatus = null\\\">\\r\\n                <span>Sluit</span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\\r\\n<app-resolution-error *ngIf=\\\"innerWidth > 1024\\\"></app-resolution-error>\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { AuthService } from './services/core/auth.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ErrorService } from './services/others/error.service';\r\nimport { HubService } from './services/others/hub.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RegistrationService } from './services/others/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  isAuthenticated: boolean;\r\n  registrationStatus: string;\r\n  authStatusSubscription: Subscription;\r\n  registrationStatusSubscription: Subscription;\r\n\r\n  innerWidth: any;\r\n\r\n  @ViewChild('registrationModal') registrationModal: any;\r\n\r\n  constructor(private authService: AuthService,\r\n    private errorService: ErrorService,\r\n    private modalService: NgbModal,\r\n    private registrationService: RegistrationService,\r\n    private hubService: HubService) { }\r\n\r\n  async ngOnInit() {\r\n    if (!this.isAuthenticated) {\r\n      if (window.location.href.indexOf('?postLogout=true') > 0) {\r\n        this.resetWindow();\r\n      }\r\n    }\r\n\r\n    if (window.location.href.indexOf('?error=true') > 0) {\r\n      this.errorService.authErrorSource.next('Aanmelden mislukt.');\r\n      this.resetWindow();\r\n    }\r\n\r\n    this.authStatusSubscription = this.authService.authStatus$.subscribe(status => {\r\n      this.isAuthenticated = status\r\n      if (status) {\r\n        this.hubService.startConnection();\r\n        this.hubService.addTransferChartDataListener();\r\n      }\r\n    });\r\n\r\n    this.registrationStatusSubscription = this.registrationService.registrationStatus$.subscribe(status => {\r\n      if (status) {\r\n        this.registrationStatus = status;\r\n        this.openRegistrationModal(this.registrationModal);\r\n      }\r\n    });\r\n\r\n    this.innerWidth = window.innerWidth;\r\n  }\r\n\r\n  signout() {\r\n    this.authService.signout();\r\n  }\r\n\r\n  resetWindow() {\r\n    window.history.replaceState({}, window.document.title, window.location.origin);\r\n  }\r\n\r\n  openRegistrationModal(modal: any) {\r\n    this.modalService.open(modal);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSubscription.unsubscribe();\r\n    this.registrationStatusSubscription.unsubscribe();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize() {\r\n    this.innerWidth = window.innerWidth;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatToolbarModule, MatSidenavModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthService } from './services/core/auth.service';\r\nimport { WorkshiftService } from './services/http/workshift.service';\r\nimport { PersonService } from './services/http/person.service';\r\nimport { RegistrationListComponent } from './registration-list/registration-list.component';\r\nimport { RegistrationListModalComponent } from './registration-list-modal/registration-list-modal.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { FeatherIconsPipe } from './pipes/feather.pipe';\r\nimport { PersonListComponent } from './person-list/person-list.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { EmployerService } from './services/http/employer.service';\r\nimport { FilterPipe } from './pipes/filter.pipe';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthInterceptor } from './services/core/auth.interceptor';\r\nimport { ErrorService } from './services/others/error.service';\r\nimport { FilterService } from './services/others/filter.service';\r\nimport { RegistrationService } from './services/others/registration.service';\r\nimport { HubService } from './services/others/hub.service';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\nimport { ResolutionErrorComponent } from './resolution-error/resolution-error.component';\r\n\r\nconst customNotifierOptions: NotifierOptions = {\r\n  position: {\r\n\t\thorizontal: {\r\n\t\t\tposition: 'right',\r\n\t\t\tdistance: 12\r\n\t\t},\r\n\t\tvertical: {\r\n\t\t\tposition: 'bottom',\r\n\t\t\tdistance: 12,\r\n\t\t\tgap: 10\r\n\t\t}\r\n\t},\r\n  theme: 'material',\r\n  behaviour: {\r\n    autoHide: 2500,\r\n    onClick: false,\r\n    onMouseover: 'pauseAutoHide',\r\n    showDismissButton: true,\r\n    stacking: 4\r\n  },\r\n  animations: {\r\n    enabled: true,\r\n    show: {\r\n      preset: 'slide',\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    hide: {\r\n      preset: 'fade',\r\n      speed: 300,\r\n      easing: 'ease',\r\n      offset: 50\r\n    },\r\n    shift: {\r\n      speed: 300,\r\n      easing: 'ease'\r\n    },\r\n    overlap: 150\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegistrationListComponent,\r\n    RegistrationListModalComponent,\r\n    SidebarComponent,\r\n    FeatherIconsPipe,\r\n    PersonListComponent,\r\n    FilterPipe,\r\n    LoginComponent,\r\n    NotificationsComponent,\r\n    ResolutionErrorComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule.forRoot(),\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    NotifierModule.withConfig(customNotifierOptions),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    },\r\n    AuthService,\r\n    PersonService,\r\n    WorkshiftService,\r\n    EmployerService,\r\n    DatePipe,\r\n    FilterService,\r\n    ErrorService,\r\n    RegistrationService,\r\n    HubService\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    RegistrationListModalComponent,\r\n  ],\r\n})\r\n\r\nexport class AppModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-9 col-md-7 col-lg-5 mx-auto\\\">\\r\\n      <div class=\\\"card card-signin my-5\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h3 class=\\\"card-title text-center\\\">FestiTimer</h3>\\r\\n          <h6 class=\\\"text-center\\\">Werkgeversportaal</h6>\\r\\n          <hr>\\r\\n          <ngb-alert *ngIf=\\\"errorMessage\\\" [type]=\\\"'danger'\\\" (close)=\\\"errorMessage = undefined\\\">\\r\\n            {{ errorMessage }}\\r\\n          </ngb-alert>\\r\\n          <button class=\\\"btn btn-lg bg-blue btn-block mt-4 mb-2 text-light\\\" type=\\\"submit\\\" (click)=\\\"login()\\\">Identificeer</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/core/auth.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ErrorService } from '../services/others/error.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  subscription: Subscription;\r\n  errorMessage: string;\r\n\r\n  constructor(private authService: AuthService, private errorService: ErrorService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.errorService.authError$.subscribe(error => {\r\n      this.errorMessage = error;\r\n    });\r\n  }\r\n\r\n  login() {\r\n    this.authService.loginEmployer();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","export enum TimerAction {\r\n    Start,\r\n    Pause,\r\n    Stop,\r\n}","export enum TimerState {\r\n    NoState = \"NoState\",\r\n    StartedState = \"StartedState\",\r\n    PausedState = \"PausedState\",\r\n    StoppedState = \"StoppedState\",\r\n}","export class Person {\r\n    id: number;\r\n    name: string;\r\n    cellphoneNumber: string;\r\n}","import { Job } from './job.model';\r\nimport { TimerState } from './enums/timerstate.enum';\r\n\r\nexport class Workshift {\r\n    id: number;\r\n    job: Job;\r\n    startDateTime: Date;\r\n    stopDateTime: Date;\r\n    workTime: string;\r\n    timerState: TimerState;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container fixed-top bg-white\\\" style=\\\"margin-top: 60px;\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 border-bottom border-blue-2 p-2\\\">\\r\\n      <span class=\\\"h5 font-weight-bold\\\">Notificaties</span>\\r\\n      <div>Werknemers</div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\" style=\\\"margin-top: 130px;\\\">\\r\\n    <div class=\\\"col-12 mt-4 text-center\\\" *ngIf=\\\"!notifications\\\" [hidden]=\\\"errorMessage\\\">\\r\\n      <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-2\\\" *ngIf=\\\"errorMessage\\\">\\r\\n      <div class=\\\"p-2 rounded bg-lightgray\\\">\\r\\n        <span class=\\\"h6\\\">{{ errorMessage }}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-2\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n      <div class=\\\"p-2 rounded bg-lightgray\\\">\\r\\n        <span class=\\\"font-weight-bold\\\">{{ notification.person.name }}</span>\\r\\n        <span class=\\\"float-right\\\">{{ notification.date | date:'dd/MM/yyyy HH:mm' }}</span>\\r\\n        <div class=\\\"row mt-2\\\">\\r\\n          <div class=\\\"col-10\\\">\\r\\n            <span [innerHtml]=\\\"parseMessage(notification)\\\"></span>\\r\\n          </div>\\r\\n          <div class=\\\"col-2\\\">\\r\\n            <button class=\\\"btn btn-sm bg-blue text-white text-center float-right\\\"\\r\\n              (click)=\\\"deleteNotification(notification)\\\">\\r\\n              <span class=\\\"mr-2\\\" [innerHTML]=\\\"'trash-2' | feather:22\\\"></span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HubService } from '../services/others/hub.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Notification } from '../models/notification.model';\r\nimport { EmployerService } from '../services/http/employer.service';\r\nimport { NotificationService } from '../services/http/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.css']\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n\r\n  notifications: Notification[] = [];\r\n  notificationSubscription: Subscription;\r\n  errorMessage: string;\r\n\r\n  constructor(private hubService: HubService, private employerService: EmployerService, private notificationService: NotificationService) { }\r\n\r\n  ngOnInit() {\r\n    this.employerService.getAllNotifications().subscribe(data => {\r\n      this.notifications = data;\r\n    }, error => {\r\n      this.errorMessage = \"Er is een fout opgetreden. Probeer het later opnieuw.\";\r\n    });\r\n\r\n    this.notificationSubscription = this.hubService.notifications$.subscribe(notification => {\r\n      if (notification) {\r\n        this.notifications.push(notification);\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteNotification(notification: Notification) {\r\n    this.notificationService.deleteNotification(notification.id).subscribe(data => {\r\n      var index = this.notifications.indexOf(notification);\r\n      this.notifications.splice(index, 1);\r\n    })\r\n  }\r\n\r\n  parseMessage(notification: Notification) {\r\n    var message: string;\r\n\r\n    switch (notification.state) {\r\n      case 'NotStarted':\r\n        message = \"Shift voor job \" + notification.job.description.toLocaleLowerCase().italics() + \" niet gestart.\";\r\n        break;\r\n      case 'Paused':\r\n        message = \"Te lange pauze.\"\r\n        break;\r\n    }\r\n    \r\n    return message;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.notificationSubscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbi1saXN0L3BlcnNvbi1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container fixed-top\\\" style=\\\"margin-top: 60px;\\\">\\r\\n  <div class=\\\"row border-bottom border-blue-2\\\">\\r\\n    <div class=\\\"col-12 p-2\\\">\\r\\n      <span class=\\\"h5 font-weight-bold\\\">Personen onder contract</span>\\r\\n      <div>{{ currentDate | date:'dd/MM/yyyy' }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 p-2 mt-2 d-flex\\\">\\r\\n      <div class=\\\"flex-fill pr-2\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Zoek persoon\\\" [(ngModel)]=\\\"searchName\\\">\\r\\n      </div>\\r\\n      <div class=\\\"flex-fill pl-2\\\">\\r\\n        <button [disabled]=\\\"!persons\\\" class=\\\"btn bg-blue float-right text-light\\\" (click)=\\\"openFilterModal(filterModal)\\\">\\r\\n          Filteropties\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 mt-4 text-center\\\" *ngIf=\\\"!persons\\\" [hidden]=\\\"errorMessage\\\">\\r\\n      <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-2\\\" *ngIf=\\\"errorMessage\\\">\\r\\n      <div class=\\\"p-2 rounded bg-lightgray\\\">\\r\\n        <span class=\\\"h6\\\">{{ errorMessage }}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-2\\\" *ngIf=\\\"getSelectedFiltersCount() > 0 && filteredPersons.length === 0\\\">\\r\\n      <div class=\\\"p-2 rounded bg-lightgray\\\">\\r\\n        <span class=\\\"h6\\\">Geen opgestelde personen voor de gekozen filter.</span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-2\\\" *ngFor=\\\"let person of filteredPersons | filter : searchName\\\">\\r\\n      <div class=\\\"p-2 rounded bg-lightgray\\\">\\r\\n        <span class=\\\"font-weight-bold\\\">{{ person.name }}</span>\\r\\n        <div class=\\\"row\\\" *ngFor=\\\"let workshift of person.workshifts\\\">\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <span>{{ workshift.startDateTime | date:'HH:mm' }} - {{ workshift.stopDateTime | date:'HH:mm' }}</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <span>{{ workshift.job.location }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #filterModal let-modal>\\r\\n  <div class=\\\"modal-header bg-blue text-light\\\">\\r\\n    <span class=\\\"modal-title h5 \\\" id=\\\"modal-basic-title\\\">Selecteer filter(s)</span>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.dismiss()\\\">\\r\\n      <span class=\\\"text-light\\\" [innerHTML]=\\\"'x' | feather:24\\\"></span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row text-center center-block\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button class=\\\"btn\\\" (click)=\\\"filters[0].selected = !filters[0].selected\\\">\\r\\n            <span class=\\\"h5\\\">Startuur</span>\\r\\n          </button>\\r\\n          <ngb-timepicker *ngIf=\\\"filters[0].selected\\\" [(ngModel)]=\\\"filters[0].value\\\"></ngb-timepicker>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button class=\\\"btn\\\" (click)=\\\"filters[1].selected = !filters[1].selected\\\">\\r\\n            <span class=\\\"h5\\\">Stopuur</span>\\r\\n          </button>\\r\\n          <ngb-timepicker *ngIf=\\\"filters[1].selected\\\" [(ngModel)]=\\\"filters[1].value\\\"></ngb-timepicker>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn bg-lightgreen text-light\\\" (click)=\\\"applyFilter()\\\">\\r\\n      <span>{{ getSelectedFiltersCount() }} filter(s) toepassen</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { EmployerService } from '../services/http/employer.service';\r\nimport { PersonWorkshifts } from '../models/person-workshifts.model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Filter } from '../models/filter.model';\r\nimport { Workshift } from '../models/workshift.model';\r\nimport { FilterService } from '../services/others/filter.service';\r\nimport { NotificationsService } from 'angular2-notifications';\r\n\r\n@Component({\r\n  selector: 'app-person-list',\r\n  templateUrl: './person-list.component.html',\r\n  styleUrls: ['./person-list.component.css']\r\n})\r\nexport class PersonListComponent implements OnInit {\r\n  persons: PersonWorkshifts[];\r\n  filteredPersons: PersonWorkshifts[];\r\n\r\n  searchName: string;\r\n  errorMessage: string;\r\n\r\n  currentDate: Date = new Date();\r\n\r\n  filters: Filter[] = [\r\n    {\r\n      name: 'startTime',\r\n      doesApply: function (workshift: Workshift) {\r\n        return workshift.startDateTime.getHours() == this.value.hour;\r\n      },\r\n      selected: false,\r\n      value: { hour: 0, minute: 0 },\r\n    },\r\n    {\r\n      name: 'stopTime',\r\n      doesApply: function (workshift: Workshift) {\r\n        return workshift.stopDateTime.getHours() == this.value.hour;\r\n      },\r\n      selected: false,\r\n      value: { hour: 0, minute: 0 },\r\n    }\r\n  ];\r\n\r\n  constructor(private employerService: EmployerService, \r\n    private filterService: FilterService, \r\n    private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    this.employerService.getAllPersonsByDate().subscribe(data => {\r\n      this.persons = data;\r\n      this.filteredPersons = data;\r\n      this.isDataEmpty(data);\r\n    }, error => {\r\n      this.errorMessage = \"Er is een fout opgetreden. Probeer het later opnieuw.\";\r\n    });\r\n  }\r\n\r\n  isDataEmpty(data: PersonWorkshifts[]) {\r\n    if (data.length === 0) {\r\n      this.errorMessage = \"Geen werkshifts voor het huidige moment.\";\r\n    }\r\n  }\r\n\r\n  openFilterModal(modal: any) {\r\n    this.modalService.open(modal);\r\n  }\r\n\r\n  applyFilter() {\r\n    this.filteredPersons = this.filterService.filterPersons(this.persons, this.filters);\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  getSelectedFiltersCount() {\r\n    return this.filterService.selectedFiltersCount(this.filters);\r\n  }\r\n}\r\n","import { DomSanitizer } from '@angular/platform-browser';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { icons } from 'feather-icons';\r\n\r\n@Pipe({ name: 'feather' })\r\nexport class FeatherIconsPipe implements PipeTransform {\r\n\r\n    constructor(private sanitizer: DomSanitizer) { }\r\n\r\n    transform(icon: string, size: number = 24, color: string = 'inherit') {\r\n        return this.sanitizer.bypassSecurityTrustHtml(icons[icon].toSvg({\r\n            width: size,\r\n            height: size,\r\n            color: color\r\n        }));\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PersonWorkshifts } from '../models/person-workshifts.model';\r\n\r\n@Pipe({ name: 'filter' })\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(persons: PersonWorkshifts[], searchName: string): any[] {\r\n    if (!persons) return [];\r\n    if (!searchName) return persons;\r\n\r\n    searchName = searchName.toLowerCase();\r\n\r\n    return persons.filter(person => {\r\n      return person.name.toLocaleLowerCase().includes(searchName);\r\n    });\r\n  }\r\n}\r\n","module.exports = \".filter-collapse {\\r\\n    position: absolute; \\r\\n    top: 190px;\\r\\n    z-index: 4; \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0cmF0aW9uLWxpc3QtbW9kYWwvcmVnaXN0cmF0aW9uLWxpc3QtbW9kYWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsVUFBVTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0cmF0aW9uLWxpc3QtbW9kYWwvcmVnaXN0cmF0aW9uLWxpc3QtbW9kYWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWx0ZXItY29sbGFwc2Uge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlOyBcclxuICAgIHRvcDogMTkwcHg7XHJcbiAgICB6LWluZGV4OiA0OyBcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"modal-header bg-blue\\\">\\r\\n  <h5 class=\\\"modal-title text-light\\\">{{ _person.name }}</h5>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"activeModal.dismiss()\\\">\\r\\n    <span class=\\\"text-light\\\" [innerHTML]=\\\"'x' | feather:24\\\"></span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"row border-bottom pb-3\\\">\\r\\n    <div class=\\\"col-4 text-center\\\">\\r\\n      <button class=\\\"btn btn-info\\\" [class.bg-success]=\\\"selectedTimerAction === timerAction.Start\\\"\\r\\n        [disabled]=\\\"isStartButtonDisabled()\\\" (click)=\\\"selectAction(timerAction.Start)\\\">Start</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-center\\\">\\r\\n      <button class=\\\"btn btn-info\\\" [class.bg-success]=\\\"selectedTimerAction === timerAction.Pause\\\"\\r\\n        [disabled]=\\\"isPauseButtonDisabled()\\\" (click)=\\\"selectAction(timerAction.Pause)\\\">Pause</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-center\\\">\\r\\n      <button class=\\\"btn btn-info\\\" [class.bg-success]=\\\"selectedTimerAction === timerAction.Stop\\\"\\r\\n        [disabled]=\\\"isStopButtonDisabled()\\\" (click)=\\\"selectAction(timerAction.Stop)\\\">Stop</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row border-bottom p-3\\\">\\r\\n    <div class=\\\"col-12 text-center\\\">\\r\\n      <div *ngIf=\\\"workTime == undefined\\\" class=\\\"spinner-border\\\" role=\\\"status\\\">\\r\\n        <span class=\\\"sr-only\\\">Loading...</span>\\r\\n      </div>\\r\\n      <h5>{{ workTime | date:'HH:mm:ss':'GMT' }}</h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row pt-3\\\" *ngIf=\\\"selectedTimerAction != undefined\\\">\\r\\n    <div class=\\\"col-12 text-center\\\">\\r\\n      <button class=\\\"btn btn-block btn-info\\\" (click)=\\\"identifyPerson()\\\">Identificeer</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from '../services/core/auth.service';\r\nimport { WorkshiftService } from '../services/http/workshift.service';\r\nimport { Workshift } from '../models/workshift.model';\r\nimport { TimerState } from '../models/enums/timerstate.enum';\r\nimport { TimerAction } from '../models/enums/timeraction.enum';\r\nimport { Person } from '../models/person.model';\r\n\r\n@Component({\r\n  selector: 'app-registration-list-modal',\r\n  templateUrl: './registration-list-modal.component.html',\r\n  styleUrls: ['./registration-list-modal.component.css']\r\n})\r\nexport class RegistrationListModalComponent {\r\n  _person: Person;\r\n  _workshift: Workshift;\r\n\r\n  @Input()\r\n  set person(person: Person) {\r\n    this._person = person;\r\n  }\r\n\r\n  @Input()\r\n  set workshift(workshift: Workshift) {\r\n    this._workshift = workshift;\r\n\r\n    this.workshiftService.getWorkshiftRegistrationElapsedTime(workshift.id).subscribe(data => {\r\n      if (TimerState[workshift.timerState] == TimerState.StartedState) {\r\n        var startTime = Date.now();\r\n\r\n        setInterval(() => {\r\n          this.workTime = Date.now() - startTime + data;\r\n        }, 10);\r\n\r\n      }\r\n      if (TimerState[workshift.timerState] == TimerState.PausedState || TimerState[workshift.timerState] == TimerState.StoppedState) {\r\n        this.workTime = data;\r\n        return;\r\n      }\r\n\r\n      this.workTime = 0;\r\n    });\r\n  }\r\n\r\n  selectedTimerAction: TimerAction;\r\n  timerAction = TimerAction;\r\n  workTime: number;\r\n\r\n  constructor(public activeModal: NgbActiveModal, public authService: AuthService, public workshiftService: WorkshiftService) { }\r\n\r\n  selectAction(timerAction: TimerAction) {\r\n    this.selectedTimerAction = timerAction;\r\n  }\r\n\r\n  identifyPerson() {\r\n    localStorage.setItem('registrationValues', this.selectedTimerAction + ',' + this._workshift.id.toString());\r\n    \r\n    this.authService.loginPerson();\r\n  }\r\n\r\n  isStartButtonDisabled() {\r\n    return TimerState[this._workshift.timerState] == TimerState.StartedState \r\n      || TimerState[this._workshift.timerState] == TimerState.StoppedState;\r\n  }\r\n\r\n  isPauseButtonDisabled() {\r\n    return TimerState[this._workshift.timerState] === TimerState.NoState \r\n      || TimerState[this._workshift.timerState] === TimerState.PausedState \r\n      || TimerState[this._workshift.timerState] === TimerState.StoppedState;\r\n  }\r\n\r\n  isStopButtonDisabled() {\r\n    return TimerState[this._workshift.timerState] === TimerState.NoState \r\n      || TimerState[this._workshift.timerState] === TimerState.StoppedState;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi1saXN0L3JlZ2lzdHJhdGlvbi1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container fixed-top\\\" style=\\\"margin-top: 60px;\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 border-bottom border-blue-2 p-2\\\">\\r\\n      <span class=\\\"h5 font-weight-bold\\\">Registratie personen</span>\\r\\n      <div>{{ currentDate | date:'dd/MM/yyyy HH:mm' }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 p-2 mt-2 d-flex\\\">\\r\\n      <div class=\\\"flex-fill pr-2\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Zoek persoon\\\" [(ngModel)]=\\\"searchName\\\">\\r\\n      </div>\\r\\n      <div class=\\\"flex-fill pl-2\\\">\\r\\n        <button [disabled]=\\\"!persons\\\" class=\\\"btn bg-blue float-right text-light\\\" (click)=\\\"openFilterModal(filterModal)\\\">\\r\\n          Filteropties\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 mt-4 text-center\\\" *ngIf=\\\"!persons\\\" [hidden]=\\\"errorMessage\\\">\\r\\n      <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-2\\\" *ngIf=\\\"errorMessage\\\">\\r\\n      <div class=\\\"p-2 rounded bg-lightgray\\\">\\r\\n        <span class=\\\"h6\\\">{{ errorMessage }}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-2\\\" *ngIf=\\\"getSelectedFiltersCount() > 0 && filteredPersons.length === 0\\\">\\r\\n      <div class=\\\"p-2 rounded bg-lightgray\\\">\\r\\n        <span class=\\\"h6\\\">Geen werkshifts voor de gekozen filter.</span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-2\\\" *ngFor=\\\"let person of filteredPersons | filter : searchName\\\">\\r\\n      <div class=\\\"p-2 rounded bg-lightgray\\\" *ngFor=\\\"let workshift of person.workshifts\\\"\\r\\n        (click)=\\\"openRegistrationDetails(person, workshift)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12 mb-3\\\">\\r\\n            <span class=\\\"font-weight-bold\\\">{{ person.name }}</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <span class=\\\"font-weight-bold\\\">Job</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-8\\\">\\r\\n            <span>{{ workshift.job.description }}</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <span class=\\\"font-weight-bold\\\">Werktijd</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-8\\\">\\r\\n            <span>{{ workshift.startDateTime | date:'HH:mm' }} - {{ workshift.stopDateTime | date:'HH:mm' }}</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <span class=\\\"font-weight-bold\\\">Registratie</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-8\\\">\\r\\n            <div [ngSwitch]=\\\"timerState[workshift.timerState]\\\">\\r\\n              <span *ngSwitchCase=\\\"timerState.NoState\\\">Niet gestart</span>\\r\\n              <span *ngSwitchCase=\\\"timerState.StartedState\\\">Gestart</span>\\r\\n              <span *ngSwitchCase=\\\"timerState.PausedState\\\">Gepauzeerd</span>\\r\\n              <span *ngSwitchCase=\\\"timerState.StoppedState\\\">Gestopt</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <span [innerHTML]=\\\"'clock' | feather:20\\\"\\r\\n              *ngIf=\\\"timerState[workshift.timerState] === timerState.StartedState\\\"></span>\\r\\n          </div>\\r\\n          <div class=\\\"col-8\\\">\\r\\n            <span\\r\\n              *ngIf=\\\"timerState[workshift.timerState] === timerState.StartedState\\\">{{ workshift.workTime | slice:0:11 }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #filterModal let-modal>\\r\\n  <div class=\\\"modal-header bg-blue text-light\\\">\\r\\n    <span class=\\\"modal-title h5 \\\" id=\\\"modal-basic-title\\\">Selecteer filter(s)</span>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.dismiss()\\\">\\r\\n      <span class=\\\"text-light\\\" [innerHTML]=\\\"'x' | feather:24\\\"></span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body pt-2 pb-2 pr-0 pl-0\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row text-left center-block\\\">\\r\\n        <div class=\\\"col-12 p-2\\\">\\r\\n          <button class=\\\"btn\\\" (click)=\\\"filters[0].selected = !filters[0].selected\\\">\\r\\n            <span class=\\\"h5\\\">Job</span>\\r\\n          </button>\\r\\n          <div class=\\\"pt-2\\\" *ngIf=\\\"filters[0].selected\\\">\\r\\n            <ng-select [items]=\\\"jobs\\\" bindLabel=\\\"description\\\" bindValue=\\\"id\\\" placeholder=\\\"Selecteer job\\\"\\r\\n              [(ngModel)]=\\\"filters[0].value\\\" [searchable]=\\\"false\\\" [clearable]=\\\"false\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 p-2\\\">\\r\\n          <button class=\\\"btn\\\" (click)=\\\"filters[1].selected = !filters[1].selected\\\">\\r\\n            <span class=\\\"h5\\\">Registratie</span>\\r\\n          </button>\\r\\n          <div class=\\\"pt-2\\\" *ngIf=\\\"filters[1].selected\\\">\\r\\n            <ng-select [(ngModel)]=\\\"filters[1].value\\\" placeholder=\\\"Selecteer registratie\\\" [searchable]=\\\"false\\\"\\r\\n              [clearable]=\\\"false\\\">\\r\\n              <ng-option [value]=\\\"'NoState'\\\">Niet gestart</ng-option>\\r\\n              <ng-option [value]=\\\"'StartedState'\\\">Gestart</ng-option>\\r\\n              <ng-option [value]=\\\"'PausedState'\\\">Gepauzeerd</ng-option>\\r\\n              <ng-option [value]=\\\"'StoppedState'\\\">Gestopt</ng-option>\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn bg-lightgreen text-light\\\" (click)=\\\"applyFilter()\\\">\\r\\n      <span>{{ getSelectedFiltersCount() }} filter(s) toepassen</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RegistrationListModalComponent } from '../registration-list-modal/registration-list-modal.component';\r\nimport { Workshift } from '../models/workshift.model';\r\nimport { EmployerService } from '../services/http/employer.service';\r\nimport { PersonWorkshifts } from '../models/person-workshifts.model';\r\nimport { TimerState } from '../models/enums/timerstate.enum';\r\nimport { Job } from '../models/job.model';\r\nimport { Person } from '../models/person.model';\r\nimport { Filter } from '../models/filter.model';\r\nimport { FilterService } from '../services/others/filter.service';\r\n\r\n@Component({\r\n  selector: 'app-registration-list',\r\n  templateUrl: './registration-list.component.html',\r\n  styleUrls: ['./registration-list.component.css']\r\n})\r\nexport class RegistrationListComponent implements OnInit {\r\n\r\n  persons: PersonWorkshifts[];\r\n  filteredPersons: PersonWorkshifts[];\r\n\r\n  searchName: string;\r\n  errorMessage: string;\r\n\r\n  jobs: Job[];\r\n  timerState = TimerState;\r\n  currentDate: Date = new Date();\r\n\r\n\r\n  filters: Filter[] = [\r\n    {\r\n      name: 'jobDescription',\r\n      doesApply: function (workshift: Workshift) {\r\n        return workshift.job.id == this.value;\r\n      },\r\n      selected: false,\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'registration',\r\n      doesApply: function (workshift: Workshift) {\r\n        return workshift.timerState == this.value;\r\n      },\r\n      selected: false,\r\n      value: null,\r\n    }\r\n  ];\r\n\r\n  constructor(private modalService: NgbModal,\r\n    private filterService: FilterService,\r\n    private employerService: EmployerService) { }\r\n\r\n  ngOnInit() {\r\n    this.getWorkshifts();\r\n    this.jobs = [];\r\n  }\r\n\r\n  getWorkshifts() {\r\n    this.employerService.getAllWorkshiftsByDateTime().subscribe(data => {\r\n      this.persons = data;\r\n      this.filteredPersons = data;\r\n      this.isDataEmpty(data);\r\n    }, error => {\r\n      this.errorMessage = \"Er is een fout opgetreden. Probeer het later opnieuw.\";\r\n    });\r\n  }\r\n\r\n  isDataEmpty(data: PersonWorkshifts[]) {\r\n    if(data.length === 0) {\r\n      this.errorMessage = \"Geen werkshifts voor het huidige moment.\";\r\n    } else {\r\n      this.parseJobs(data);\r\n    }\r\n  }\r\n\r\n  parseJobs(data: PersonWorkshifts[]) {\r\n    data.forEach(p => {\r\n      p.workshifts.forEach(w => {\r\n        if (!this.jobs.some(job => job.id == w.job.id)) {\r\n          this.jobs.push(w.job);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  openRegistrationDetails(person: Person, workshift: Workshift) {\r\n    const modalRef = this.modalService.open(RegistrationListModalComponent);\r\n\r\n    modalRef.componentInstance.person = person;\r\n    modalRef.componentInstance.workshift = workshift;\r\n  }\r\n\r\n  openFilterModal(modal: any) {\r\n    this.modalService.open(modal);\r\n  }\r\n\r\n  applyFilter() {\r\n    this.filteredPersons = this.filterService.filterPersons(this.persons, this.filters);\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  getSelectedFiltersCount() {\r\n    return this.filterService.selectedFiltersCount(this.filters);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc29sdXRpb24tZXJyb3IvcmVzb2x1dGlvbi1lcnJvci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-6 mx-auto\\\">\\r\\n          <div class=\\\"card card-signin my-5\\\">\\r\\n              <div class=\\\"card-body text-center\\\">\\r\\n                  <h3 class=\\\"card-title\\\">FestiTimer</h3>\\r\\n                  <hr>\\r\\n                  <div class=\\\"alert alert-danger\\\">\\r\\n                      Applicatie niet compatibel met huidige resolutie.\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-resolution-error',\r\n  templateUrl: './resolution-error.component.html',\r\n  styleUrls: ['./resolution-error.component.css']\r\n})\r\nexport class ResolutionErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private _authService: AuthService, private _router: Router) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (req.url.startsWith(environment.apiRoot)) {\r\n      var accessToken = this._authService.authorizationAccessToken;\r\n      const headers = req.headers.set('Authorization', `Bearer ${accessToken}`);\r\n      const authReq = req.clone({ headers });\r\n      return next.handle(authReq)\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserManager, User, UserManagerSettings, WebStorageStateStore } from 'oidc-client';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RegistrationService } from '../others/registration.service';\r\nimport { ErrorService } from '../others/error.service';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  private _authStatusSource = new BehaviorSubject<boolean>(false);\r\n  authStatus$ = this._authStatusSource.asObservable();\r\n\r\n  private manager = new UserManager(getClientSettings());\r\n  private user: User | null;\r\n\r\n  constructor(private registrationService: RegistrationService, private errorService: ErrorService) {\r\n    this.manager.getUser().then(user => {\r\n      if (user != null && user.profile[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"] == \"Person\") {\r\n        var storedEmployer = JSON.parse(localStorage.getItem('EmployerObject'));\r\n\r\n        if (storedEmployer == null) {\r\n          this.manager.removeUser();\r\n          this.errorService.authErrorSource.next(\"Aanmelden mislukt.\")\r\n          localStorage.clear();\r\n          return;\r\n        }\r\n\r\n        this.replaceUserWithEmployer(user, storedEmployer);\r\n\r\n        var personRegistration = localStorage.getItem('registrationValues').split(\",\");\r\n        this.registrationService.performRegistration(personRegistration[0], Number.parseInt(personRegistration[1]));\r\n\r\n        localStorage.clear();\r\n        return;\r\n      }\r\n\r\n      this.user = user;\r\n      this._authStatusSource.next(this.isAuthenticated());\r\n    });\r\n\r\n    this.manager.events.addUserLoaded(() => {\r\n      this.manager.getUser().then(user => {\r\n        this.user = user;\r\n        this._authStatusSource.next(this.isAuthenticated());\r\n      });\r\n    });\r\n  }\r\n\r\n  loginEmployer() {\r\n    return this.manager.signinRedirect();\r\n  }\r\n\r\n  loginPerson() {\r\n    localStorage.setItem('EmployerObject', JSON.stringify(this.user));\r\n    return this.manager.signinRedirect();\r\n  }\r\n\r\n  signout() {\r\n    this.manager.signoutRedirect();\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return this.user != null && !this.user.expired;\r\n  }\r\n\r\n  get authorizationAccessToken(): string {\r\n    return `${this.user.access_token}`;\r\n  }\r\n\r\n  get UserFirstName(): string {\r\n    return this.user != null ? this.user.profile.first_name : '';\r\n  }\r\n\r\n  get UserId(): number {\r\n    return this.user != null ? this.user.profile.sub : 0;\r\n  }\r\n\r\n  replaceUserWithEmployer(user: User, storedEmployer: User) {\r\n    user.access_token = storedEmployer.access_token;\r\n    user.expires_at = storedEmployer.expires_at;\r\n    user.id_token = storedEmployer.id_token;\r\n    user.profile = storedEmployer.profile;\r\n    user.scope = storedEmployer.scope;\r\n    user.session_state = storedEmployer.session_state;\r\n\r\n    this.user = user;\r\n    this.manager.storeUser(user);\r\n    this._authStatusSource.next(this.isAuthenticated());\r\n  }\r\n}\r\n\r\nexport function getClientSettings(): UserManagerSettings {\r\n  return {\r\n    authority: environment.identityAuthority,\r\n    client_id: 'festitimer-client',\r\n    redirect_uri: `${environment.clientRoot}assets/oidc-login-redirect.html`,\r\n    post_logout_redirect_uri: `${environment.clientRoot}?postLogout=true`,\r\n    response_type: \"id_token token\",\r\n    scope: \"openid festitimer-api profile\",\r\n    filterProtocolClaims: true,\r\n    userStore: new WebStorageStateStore({ store: window.sessionStorage }),\r\n    silent_redirect_uri: `${environment.clientRoot}silent-refresh.html`,\r\n    loadUserInfo: true,\r\n    prompt: 'login'\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PersonWorkshifts } from '../../models/person-workshifts.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Workshift } from '../../models/workshift.model';\r\nimport { AuthService } from '../core/auth.service';\r\nimport { Notification } from 'src/app/models/notification.model';\r\n\r\n@Injectable()\r\nexport class EmployerService {\r\n\r\n  constructor(private httpClient: HttpClient, private authService: AuthService, private datepipe: DatePipe) { }\r\n\r\n  getAllPersonsByDate(): Observable<PersonWorkshifts[]> {\r\n    var currentDate = new Date();\r\n    var formattedDate = this.datepipe.transform(currentDate, 'yyyy-MM-dd');\r\n\r\n    return this.httpClient.get(environment.apiRoot + 'employer/' + this.authService.UserId + '/persons/' + formattedDate).pipe(\r\n      map(res => this.parseData(res)));\r\n  }\r\n\r\n  getAllWorkshiftsByDateTime(): Observable<PersonWorkshifts[]> {\r\n    var currentDate = new Date();\r\n    currentDate.setHours(9);\r\n    var formattedDate = this.datepipe.transform(currentDate, 'yyyy-MM-ddTHH:mm:ss');\r\n\r\n    return this.httpClient.get<PersonWorkshifts[]>(environment.apiRoot + 'employer/' + this.authService.UserId + '/workshifts/' + formattedDate);\r\n  }\r\n\r\n  getAllNotifications(): Observable<Notification[]> {\r\n    return this.httpClient.get<Notification[]>(environment.apiRoot + 'employer/' + this.authService.UserId + '/notifications');\r\n  }\r\n\r\n  parseData(json: any): PersonWorkshifts[] {\r\n    return Object.keys(json).map(key => {\r\n      let workshifts = json[key].workshifts;\r\n\r\n      let parsedWorkshifts = Object.keys(workshifts).map(key => {\r\n        let workshift: Workshift = {\r\n          id: workshifts[key].id,\r\n          startDateTime: new Date(workshifts[key].startDateTime),\r\n          stopDateTime: new Date(workshifts[key].stopDateTime),\r\n          workTime: workshifts[key].workTime,\r\n          timerState: workshifts[key].timerState,\r\n          job: workshifts[key].job,\r\n        };\r\n\r\n        return workshift;\r\n      })\r\n\r\n      let person: PersonWorkshifts = {\r\n        id: json[key].id,\r\n        name: json[key].name,\r\n        workshifts: parsedWorkshifts,\r\n      };\r\n\r\n      return person;\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  deleteNotification(id: number): Observable<any> {\r\n    return this.httpClient.delete(environment.apiRoot + 'notifications/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Person } from '../../models/person.model';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class PersonService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAllPersons(): Observable<Person[]> {\r\n    return this.httpClient.get<Person[]>(environment.apiRoot + 'person');\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Workshift } from '../../models/workshift.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class WorkshiftService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAllWorkshiftRegistrations(): Observable<Workshift[]> {\r\n    return this.httpClient.get<Workshift[]>(environment.apiRoot + 'workshift/');\r\n  }\r\n\r\n  getWorkshiftRegistration(id: number): Observable<Workshift> {\r\n    return this.httpClient.get<Workshift>(environment.apiRoot + 'workshift/' + id);\r\n  }\r\n\r\n  getWorkshiftRegistrationElapsedTime(id: number): Observable<number> {\r\n    return this.httpClient.get<number>(environment.apiRoot + 'workshift/' + id + '/elapsed/');\r\n  }\r\n\r\n  startWorkshiftRegistration(id: number) {\r\n    return this.httpClient.post(environment.apiRoot + 'workshift/start?id=' + id, null);\r\n  }\r\n\r\n  pauseWorkshiftRegistration(id: number) {\r\n    return this.httpClient.post(environment.apiRoot + 'workshift/pause?id=' + id, null);\r\n  }\r\n\r\n  stopWorkshiftRegistration(id: number) {\r\n    return this.httpClient.post(environment.apiRoot + 'workshift/stop?id=' + id, null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n  authErrorSource = new BehaviorSubject<string>(null);\r\n  authError$ = this.authErrorSource.asObservable();\r\n  \r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PersonWorkshifts } from '../../models/person-workshifts.model';\r\nimport { Filter } from '../../models/filter.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FilterService {\r\n\r\n  filterPersons(persons: PersonWorkshifts[], filters: Filter[]) {\r\n    let selectedFilters = filters.filter(filter => filter.selected);\r\n\r\n    if (selectedFilters.length === 0) {\r\n      return persons;\r\n    }\r\n\r\n    return persons.filter(p => this.hasAWorkshiftAppliesByAllFilters(p, selectedFilters));\r\n  }\r\n\r\n  hasAWorkshiftAppliesByAllFilters(person: PersonWorkshifts, selectedFilters: Filter[]) {\r\n    return person.workshifts.some(w => {\r\n      return selectedFilters.every(value => {\r\n        return value.doesApply(w);\r\n      });\r\n    });\r\n  }\r\n\r\n  selectedFiltersCount(filters: Filter[]) {\r\n    return filters.filter(filter => filter.selected).length;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as signalR from \"@aspnet/signalr\";\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Notification } from 'src/app/models/notification.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HubService {\r\n\r\n  private hubConnection: signalR.HubConnection\r\n  private _notificationsSource = new BehaviorSubject<Notification>(null);\r\n  notifications$ = this._notificationsSource.asObservable();\r\n\r\n  constructor(private notifierService: NotifierService) { }\r\n\r\n  public startConnection = () => {\r\n    this.hubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl('http://localhost:5000/notificaties')\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .then(() => console.log('Connection started'))\r\n      .catch(err => console.log('Error while starting connection: ' + err));\r\n  }\r\n  \r\n  public addTransferChartDataListener = () => {\r\n    this.hubConnection.on('broadcastnotification', (data) => {\r\n      this._notificationsSource.next(data);\r\n      this.notifierService.notify('default', 'Nieuwe notificatie beschikbaar');\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TimerAction } from 'src/app/models/enums/timeraction.enum';\r\nimport { WorkshiftService } from '../http/workshift.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationService {\r\n\r\n  private _registrationStatusSource = new BehaviorSubject<string>(null);\r\n  registrationStatus$ = this._registrationStatusSource.asObservable();\r\n\r\n  constructor(private workshiftService: WorkshiftService) { }\r\n\r\n  performRegistration(timerAction: string, workshiftId: number) {\r\n    switch (TimerAction[timerAction]) {\r\n      case 'Start':\r\n        this.workshiftService.startWorkshiftRegistration(workshiftId).subscribe(data => this.registrationStatus('gestart'));\r\n        break;\r\n      case 'Pause':\r\n        this.workshiftService.pauseWorkshiftRegistration(workshiftId).subscribe(data => this.registrationStatus('gepauzeerd'));\r\n        break;\r\n      case 'Stop':\r\n        this.workshiftService.stopWorkshiftRegistration(workshiftId).subscribe(data => this.registrationStatus('gestopt'));\r\n        break;\r\n    }\r\n  }\r\n\r\n  registrationStatus(timerAction: string) {\r\n    this._registrationStatusSource.next(timerAction);\r\n  }\r\n}\r\n\r\n","module.exports = \".sidebar-container {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.sidebar-width {\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n.height-60 {\\r\\n    height: 60px;\\r\\n}\\r\\n\\r\\n.pointer {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nng-scrollbar {\\r\\n    --scrollbar-size: 8px;\\r\\n    --scrollbar-thumb-color: rgba(94, 175, 255, 0.5);\\r\\n    --scrollbar-thumb-hover-color: dodgerblue;\\r\\n    --scrollbar-border-radius: 4px;\\r\\n    border: 1px solid gray;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGdEQUFnRDtJQUNoRCx5Q0FBeUM7SUFDekMsOEJBQThCO0lBQzlCLHNCQUFzQjtFQUN4QiIsImZpbGUiOiJzcmMvYXBwL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGViYXItY29udGFpbmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLnNpZGViYXItd2lkdGgge1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG59XHJcblxyXG4uaGVpZ2h0LTYwIHtcclxuICAgIGhlaWdodDogNjBweDtcclxufVxyXG5cclxuLnBvaW50ZXIge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5uZy1zY3JvbGxiYXIge1xyXG4gICAgLS1zY3JvbGxiYXItc2l6ZTogOHB4O1xyXG4gICAgLS1zY3JvbGxiYXItdGh1bWItY29sb3I6IHJnYmEoOTQsIDE3NSwgMjU1LCAwLjUpO1xyXG4gICAgLS1zY3JvbGxiYXItdGh1bWItaG92ZXItY29sb3I6IGRvZGdlcmJsdWU7XHJcbiAgICAtLXNjcm9sbGJhci1ib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xyXG4gIH0iXX0= */\"","module.exports = \"<mat-sidenav-container fullscreen hasBackdrop=\\\"true\\\" class=\\\"sidebar-container\\\">\\r\\n  <mat-sidenav #sidebar mode=\\\"over\\\" class=\\\"sidebar-width bg-white\\\" fixedInViewport=\\\"true\\\">\\r\\n    <div class=\\\"d-flex border-bottom border-dark bg-blue text-light p-2  height-60\\\">\\r\\n      <div class=\\\"flex-fill p-1 align-self-center\\\">\\r\\n        <span class=\\\"h5\\\">FestiTimer</span>\\r\\n      </div>\\r\\n      <div class=\\\"flex-fill p-1 align-self-center\\\">\\r\\n        <span [innerHTML]=\\\"'x' | feather:20\\\" class=\\\"float-right\\\" (click)=\\\"toggleSidebar()\\\"></span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <ul class=\\\"list-group pointer text-black\\\" (click)=\\\"toggleSidebar()\\\">\\r\\n      <li class=\\\"list-group-item bg-light-green\\\" [routerLink]=\\\"['']\\\">\\r\\n        <span class=\\\"mr-2\\\" [innerHTML]=\\\"'users' | feather:24\\\"></span>\\r\\n        <span class=\\\"h6\\\">Personen</span>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item bg-light-green\\\" [routerLink]=\\\"['registratie']\\\">\\r\\n        <span class=\\\"mr-2\\\" [innerHTML]=\\\"'book-open' | feather:24\\\"></span>\\r\\n        <span class=\\\"h6\\\">Registratie</span>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item bg-light-green\\\" [routerLink]=\\\"['notificaties']\\\">\\r\\n        <span class=\\\"mr-2\\\" [innerHTML]=\\\"'bell' | feather:24\\\"></span>\\r\\n        <span class=\\\"h6\\\">Notificaties</span>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content class=\\\"bg-light-green\\\">\\r\\n    <div class=\\\"container bg-blue text-light fixed-top\\\">\\r\\n      <div class=\\\"row pt-2 pb-2 height-60\\\">\\r\\n        <div class=\\\"col-2 align-self-center\\\">\\r\\n          <span [innerHTML]=\\\"'menu' | feather:32\\\" (click)=\\\"toggleSidebar()\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"col-10 align-self-center\\\">\\r\\n          <span class=\\\"float-right\\\" [innerHTML]=\\\"'log-out' | feather:28\\\" (click)=\\\"logout()\\\"></span>\\r\\n          <span class=\\\"float-right mr-3\\\" style=\\\"font-size:20px\\\">{{ UserFirstName }}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <router-outlet></router-outlet>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\"","import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { MatSidenav } from \"@angular/material\";\r\nimport { AuthService } from '../services/core/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  UserFirstName: string;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.UserFirstName = this.authService.UserFirstName;\r\n  }\r\n\r\n  @ViewChild('sidebar') sidebar: MatSidenav;\r\n\r\n  toggleSidebar() {\r\n    this.sidebar.toggle();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.signout();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n  apiRoot: 'http://localhost:5000/',\r\n  identityAuthority: 'http://localhost:5001/',\r\n    \r\n  clientRoot: 'http://localhost:4200/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}